/* 

Cleaning Data in SQL Queries 

*/ 

SELECT * 
FROM sqlportfolio..Nashville_Housing;

-- Standardizing Date Format 

UPDATE sqlportfolio..Nashville_Housing
SET SaleDate = CONVERT(Date,Saledate)

ALTER TABLE Sqlportfolio..Nashville_Housing
ADD SaleDateConverted Date; 

Update Nashville_Housing
SET SaleDateConverted = CONVERT(Date,Saledate)

SELECT Saledateconverted, CONVERT(Date,Saledate)
FROM Sqlportfolio..Nashville_Housing;

-- Populating Property Address Data 

SELECT *
FROM Sqlportfolio..Nashville_Housing
--WHERE PropertyAddress IS NULL
ORDER BY ParcelID; 


SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM sqlportfolio..Nashville_Housing a 
JOIN sqlportfolio..Nashville_Housing b 
    ON a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress IS NULL; 


UPDATE a 
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
FROM sqlportfolio..Nashville_Housing a 
JOIN sqlportfolio..Nashville_Housing b 
    ON a.ParcelID = b.ParcelID
    AND a.[UniqueID] <> b.[UniqueID]
WHERE a.PropertyAddress IS NULL; 


--- Breaking out Address Into Individual Columns (Address, City, State)

SELECT PropertyAddress 
FROM sqlportfolio..Nashville_Housing 
--WHERE PropertyAddress IS NULL 
--ORDER BY PArcelID 

-- Removing Commas 

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) AS Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1 , LEN(PropertyAddress)) AS Address
FROM Sqlportfolio..Nashville_Housing 


-- Creating the seperate Columns 

ALTER TABLE Sqlportfolio..Nashville_Housing
ADD PropertySplitAddress NVARCHAR(255); 

Update Sqlportfolio..Nashville_Housing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) 



ALTER TABLE Sqlportfolio..Nashville_Housing
ADD PropertySplitCity NVARCHAR(255); 

Update Sqlportfolio..Nashville_Housing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1 , LEN(PropertyAddress))


-- Alternative way to remove commas and Split into different columns (with Parsename instead of Substrings)

SELECT OwnerAddress
FROM sqlportfolio..Nashville_Housing;

SELECT 
PARSENAME (REPLACE (OwnerAddress, ',', '.') ,3)
,PARSENAME (REPLACE (OwnerAddress, ',', '.') ,2)
,PARSENAME (REPLACE (OwnerAddress, ',', '.') ,1)
FROM sqlportfolio..Nashville_Housing; 


ALTER TABLE Sqlportfolio..Nashville_Housing
ADD OwnerSplitAddress NVARCHAR(255); 

UPDATE Sqlportfolio..Nashville_Housing
SET OwnerSplitAddress =  PARSENAME (REPLACE (OwnerAddress, ',', '.') ,3)


ALTER TABLE Sqlportfolio..Nashville_Housing
ADD OwnerSplitCity NVARCHAR(255); 

UPDATE Sqlportfolio..Nashville_Housing
SET OwnerSplitCity = PARSENAME (REPLACE (OwnerAddress, ',', '.') ,2)



ALTER TABLE Sqlportfolio..Nashville_Housing
ADD OwnerSplitState NVARCHAR(255); 

UPDATE Sqlportfolio..Nashville_Housing
SET OwnerSplitState = PARSENAME (REPLACE (OwnerAddress, ',', '.') ,1)

-- Change Y and N to Yes and No in "Sold as Vacant" Field 

SELECT DISTINCT (SoldAsVacant), COUNT(SoldAsVacant)
FROM sqlportfolio..Nashville_Housing
GROUP BY SoldAsVacant
ORDER BY 2;

SELECT SoldAsVacant
,CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant END
FROM sqlportfolio..Nashville_Housing 

UPDATE Sqlportfolio..Nashville_Housing
SET SoldAsVacant = CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
    WHEN SoldAsVacant = 'N' THEN 'No'
    ELSE SoldAsVacant END

-- Removing Duplicates 
    -- Using CTE and Windows functions to find duplicate values 

WITH RowNumCTE AS (
SELECT *,
    ROW_NUMBER() OVER (
    PARTITION BY ParcelID, 
                 PropertyAddress,
                 SalePrice,
                 SaleDate,
                 LegalReference
                 ORDER BY
                    UniqueID    
                    ) row_num
FROM Sqlportfolio..Nashville_Housing
)
DELETE
FROM RowNumCTE
WHERE Row_num > 1 

-- Deleting Unused columns 

SELECT * 
FROM Sqlportfolio..Nashville_Housing 

ALTER TABLE Sqlportfolio..Nashville_Housing 
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
