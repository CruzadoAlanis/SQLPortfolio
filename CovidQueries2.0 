/* 
COVID-19 Data Exploration 

Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

 */

SELECT * 
FROM sqlportfolio..coviddeaths
WHERE continent IS NOT NULL
ORDER BY 3,4;


-- Select data we are starting with 

SELECT Location, Date, Total_cases, new_cases, Total_deaths, population
FROM sqlportfolio..coviddeaths
WHERE continent IS NOT NULL
ORDER BY 1,2; 


--Total Cases vs Total Deaths 
--Displays the mortality percentage associated with contracting COVID-19 within your country 

SELECT Location,Date,Total_cases,Total_deaths, CAST(total_deaths AS DEC)/CAST(total_cases AS DEC)*100 AS DeathPercentage
FROM sqlportfolio..coviddeaths
WHERE location LIKE '%states'
AND continent IS NOT NULL
ORDER BY 1,2; 


-- Total Cases vs Population 
-- Displays percentage of population that contracted COVID-19 

SELECT Location,Date,Population,total_cases, CAST(total_cases AS DEC)/CAST(population AS DEC)*100 AS PercentPopulationInfected
FROM sqlportfolio..coviddeaths
--WHERE location LIKE '%states'
ORDER BY 1,2; 


-- Identifying Countries with highest infection rate compared to Population 

SELECT Location,Population, MAX(total_cases) AS HighestInfectionCount, MAX(CAST(total_cases AS DEC)/CAST(population AS DEC)*100) AS PercentPopulationInfected
FROM sqlportfolio..coviddeaths
-- WHERE location LIKE '%states'
GROUP BY Location, population,date
ORDER BY PercentPopulationInfected DESC;

-- Displaying Countries with Highest Death Count per Population

SELECT Location, MAX(CAST(total_deaths AS DEC)) AS TotalDeathCount
FROM sqlportfolio..coviddeaths
-- WHERE location LIKE '%states'
WHERE continent IS NOT NULL
GROUP BY Location
ORDER BY TotalDeathCount DESC;

-- BREAKING THINGS DOWN BY CONTINENT 

-- Displaying Continents with Highest Death Rate per Population 

SELECT Continent, MAX(CAST(total_deaths AS INT)) AS TotalDeathCount 
FROM sqlportfolio..coviddeaths
--WHERE Location LIKE '%states%'
WHERE Continent IS NOT NULL
GROUP BY Continent
ORDER BY TotalDeathCount DESC;

-- Total Cases vs Total Deaths 
-- Displays the mortality percentage associated with contracting COVID-19 within your continent 

SELECT Continent, Date, Total_cases, total_deaths, CAST(Total_deaths AS DEC)/CAST(Total_cases AS DEC)*100 AS DeathPercentage
FROM sqlportfolio..coviddeaths
WHERE Continent LIKE '%North America'
Order by 1,2; 

--Total Cases Vs Population 
-- Displays Percentage of Population that contracted COVID-19 

SELECT Continent, date, population, total_cases, CAST(Total_Cases AS DEC) / CAST(Population AS DEC)*100 AS PercentPopulaionInfected
FROM sqlportfolio..coviddeaths
WHERE Continent IS NOT NULL
ORDER BY 1,2;

--Continents with Highest Death Count per Population 

SELECT Continent, MAX(CAST(Total_Deaths AS INT)) AS TotalDeathCount
FROM Sqlportfolio..coviddeaths
WHERE Continent IS NOT NULL
GROUP BY Continent
ORDER BY TotalDeathCount DESC; 

--Calculating Death Count in European Union 

SELECT Location, SUM(CAST(New_Deaths AS INT)) AS TotalDeathCount
FROM sqlportfolio..coviddeaths
WHERE Continent IS NULL
    AND Location NOT IN ('World', 'European Union', 'International')
GROUP BY location
ORDER BY TotalDeathCount DESC;


-- GLOBAL NUMBERS (Total Cases and Deaths, with Percentage of Mortality)
 
SELECT SUM(new_cases) AS TotalCases,
       SUM(CAST(new_deaths AS DEC)) AS TotalDeaths,
       SUM(CAST(new_deaths AS DEC)) / SUM(CAST(new_cases AS DEC)) * 100 AS DeathPercentage
FROM sqlportfolio..coviddeaths
WHERE Continent IS NOT NULL
ORDER BY 1,2;


-- Total Population vs Vaccination 
--Displays Percentage of Population that has received at least one Covid Vaccine

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
 SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS PeopleVaccinatedRollingCount
--  (PeopleVaccinatedRollingCount/Population)*100 
FROM sqlportfolio..coviddeaths dea
JOIN sqlportfolio..covidvaccinations vac 
    ON dea.location = vac.location
    AND dea.date = vac.date
    WHERE dea.Continent IS NOT NULL 
    ORDER BY 2,3; 

  -- Using CTE in order to perform Calculation on Partition By in previous query 

    
    WITH PopvsVac (Continent, Location, Date, Population, New_vaccinations, PeopleVaccinatedRollingCount)
AS 
(
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS PeopleVaccinatedRollingCount
    FROM sqlportfolio..coviddeaths dea
    JOIN sqlportfolio..covidvaccinations vac 
        ON dea.location = vac.location
        AND dea.date = vac.date
    WHERE dea.Continent IS NOT NULL 
)
SELECT *, (PeopleVaccinatedRollingCount/Population)*100
FROM PopvsVac;





-- Using Temp Table to Perform Calculation on Partition By in previous query 

DROP TABLE IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
Continent NVARCHAR(255),
Location NVARCHAR(255),
Date DATETIME,
Population NUMERIC, 
New_Vaccinations NUMERIC, 
PeopleVaccinatedRollingCount NUMERIC, 
)

INSERT INTO #PercentPopulationVaccinated
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS PeopleVaccinatedRollingCount
    FROM sqlportfolio..coviddeaths dea
    JOIN sqlportfolio..covidvaccinations vac 
        ON dea.location = vac.location
        AND dea.date = vac.date
    WHERE dea.Continent IS NOT NULL 


SELECT *, (PeopleVaccinatedRollingCount/Population)*100 As PeopleVaccinatedPercentage
FROM #PercentPopulationVaccinated



--- Creating view to store data for future data visualizations 

CREATE VIEW PercentPopulationVaccinated AS
 SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
    SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS PeopleVaccinatedRollingCount
    FROM sqlportfolio..coviddeaths dea
    JOIN sqlportfolio..covidvaccinations vac 
        ON dea.location = vac.location
        AND dea.date = vac.date
    WHERE dea.Continent IS NOT NULL 


-- Creating View for Continents with Highest Death Count per Population 

CREATE VIEW TotalDeathCount AS
SELECT TOP 6 Continent, MAX(CAST(Total_Deaths AS INT)) AS TotalDeathCount
FROM sqlportfolio..coviddeaths
WHERE Continent IS NOT NULL
GROUP BY Continent; 

